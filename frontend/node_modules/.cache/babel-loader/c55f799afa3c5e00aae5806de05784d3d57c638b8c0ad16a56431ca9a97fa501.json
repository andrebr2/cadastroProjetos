{"ast":null,"code":"import { Api } from \"../axios-config\";\nexport const getAll = async () => {\n  try {\n    const urlRelative = `/projeto`;\n    const {\n      data\n    } = await Api.get(urlRelative);\n    if (data) {\n      return {\n        data\n      };\n    }\n    return new Error(\"Erro ao listar registros.\");\n  } catch (error) {\n    console.error(error);\n    return new Error(error.message) || \"Erro ao listar registros.\";\n  }\n};\nexport const getById = async id => {\n  try {\n    const {\n      data\n    } = await Api.get(`/projeto/${id}`);\n    if (data) {\n      return data;\n    }\n    return new Error(\"Erro ao consultar registro.\");\n  } catch (error) {\n    console.error(error);\n    return new Error(error.message) || \"Erro ao consultar registro.\";\n  }\n};\nexport const create = async dados => {\n  try {\n    const {\n      data\n    } = await Api.post(\"/projeto/\", dados);\n    if (data) {\n      return data.id;\n    }\n    return new Error(\"Erro ao criar registro.\");\n  } catch (error) {\n    console.error(error);\n    return new Error(error.message) || \"Erro ao criar registro.\";\n  }\n};\nexport const updateById = async (id, dados) => {\n  try {\n    await Api.put(`/projeto/${id}`, dados);\n  } catch (error) {\n    console.error(error);\n    return new Error(error.message) || \"Erro ao atualizar registro.\";\n  }\n};\nexport const deleteById = async id => {\n  try {\n    await Api.delete(`/projeto/${id}`);\n  } catch (error) {\n    console.error(error);\n    return new Error(error.message) || \"Erro ao apagar registro.\";\n  }\n};","map":{"version":3,"names":["Api","getAll","urlRelative","data","get","Error","error","console","message","getById","id","create","dados","post","updateById","put","deleteById","delete"],"sources":["/Users/andrebr/projetos/cadastroProjetos/frontend/src/services/api/Projetos/ProjetosService.ts"],"sourcesContent":["import { Environment } from \"environment\";\nimport { Api } from \"../axios-config\";\n\ninterface IListagemProjeto {\n\n    id: number;\n    name: string;\n    client_name: String\n    goal: string;\n    startDate: Date;\n    finalDate: Date;\n    price: number;\n    team?: String | Number\n\n}\n\ninterface IDetalheProjeto {\n\n  id: number;\n  name: string;\n  client_name: String\n  goal: string;\n  startDate: Date;\n  finalDate: Date;\n  price: number;\n  team?: String | Number\n\n}\n\ntype TProjetosComTotalCount = {\n  data: IListagemProjeto[];\n  totalCount: number;\n};\n\nexport const getAll = async (): Promise<any | Error> => {\n  try {\n    const urlRelative = `/projeto`;\n\n    const { data} = await Api.get(urlRelative);\n\n    if (data) {\n      return {\n        data,\n      };\n    }\n\n    return new Error(\"Erro ao listar registros.\");\n  } catch (error) {\n    console.error(error);\n    return (\n      new Error((error as { message: string }).message) ||\n      \"Erro ao listar registros.\"\n    );\n  }\n};\n\nexport const getById = async (id: number): Promise<IDetalheProjeto | Error> => {\n  try {\n    const { data } = await Api.get(`/projeto/${id}`);\n\n    if (data) {\n      return data;\n    }\n\n    return new Error(\"Erro ao consultar registro.\");\n  } catch (error) {\n    console.error(error);\n\n    return (\n      new Error((error as { message: string }).message) ||\n      \"Erro ao consultar registro.\"\n    );\n  }\n};\n\nexport const create = async (\n  dados: Omit<IDetalheProjeto, \"id\">\n): Promise<number | Error> => {\n  try {\n    const { data } = await Api.post<any>(\"/projeto/\", dados);\n\n    if (data) {\n      return data.id;\n    }\n\n    return new Error(\"Erro ao criar registro.\");\n  } catch (error) {\n    console.error(error);\n\n    return (\n      new Error((error as { message: string }).message) ||\n      \"Erro ao criar registro.\"\n    );\n  }\n};\n\nexport const updateById = async (\n  id: number,\n  dados: IDetalheProjeto\n): Promise<void | Error> => {\n  try {\n    await Api.put<IDetalheProjeto>(`/projeto/${id}`, dados);\n  } catch (error) {\n    console.error(error);\n\n    return (\n      new Error((error as { message: string }).message) ||\n      \"Erro ao atualizar registro.\"\n    );\n  }\n};\n\nexport const deleteById = async (id: number): Promise<void | Error> => {\n  try {\n    await Api.delete<IDetalheProjeto>(`/projeto/${id}`);\n  } catch (error) {\n    console.error(error);\n\n    return (\n      new Error((error as { message: string }).message) ||\n      \"Erro ao apagar registro.\"\n    );\n  }\n};\n"],"mappings":"AACA,SAASA,GAAG,QAAQ,iBAAiB;AAiCrC,OAAO,MAAMC,MAAM,GAAG,MAAAA,CAAA,KAAkC;EACtD,IAAI;IACF,MAAMC,WAAW,GAAI,UAAS;IAE9B,MAAM;MAAEC;IAAI,CAAC,GAAG,MAAMH,GAAG,CAACI,GAAG,CAACF,WAAW,CAAC;IAE1C,IAAIC,IAAI,EAAE;MACR,OAAO;QACLA;MACF,CAAC;IACH;IAEA,OAAO,IAAIE,KAAK,CAAC,2BAA2B,CAAC;EAC/C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,OACE,IAAID,KAAK,CAAEC,KAAK,CAAyBE,OAAO,CAAC,IACjD,2BAA2B;EAE/B;AACF,CAAC;AAED,OAAO,MAAMC,OAAO,GAAG,MAAOC,EAAU,IAAuC;EAC7E,IAAI;IACF,MAAM;MAAEP;IAAK,CAAC,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAE,YAAWM,EAAG,EAAC,CAAC;IAEhD,IAAIP,IAAI,EAAE;MACR,OAAOA,IAAI;IACb;IAEA,OAAO,IAAIE,KAAK,CAAC,6BAA6B,CAAC;EACjD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IAEpB,OACE,IAAID,KAAK,CAAEC,KAAK,CAAyBE,OAAO,CAAC,IACjD,6BAA6B;EAEjC;AACF,CAAC;AAED,OAAO,MAAMG,MAAM,GAAG,MACpBC,KAAkC,IACN;EAC5B,IAAI;IACF,MAAM;MAAET;IAAK,CAAC,GAAG,MAAMH,GAAG,CAACa,IAAI,CAAM,WAAW,EAAED,KAAK,CAAC;IAExD,IAAIT,IAAI,EAAE;MACR,OAAOA,IAAI,CAACO,EAAE;IAChB;IAEA,OAAO,IAAIL,KAAK,CAAC,yBAAyB,CAAC;EAC7C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IAEpB,OACE,IAAID,KAAK,CAAEC,KAAK,CAAyBE,OAAO,CAAC,IACjD,yBAAyB;EAE7B;AACF,CAAC;AAED,OAAO,MAAMM,UAAU,GAAG,MAAAA,CACxBJ,EAAU,EACVE,KAAsB,KACI;EAC1B,IAAI;IACF,MAAMZ,GAAG,CAACe,GAAG,CAAmB,YAAWL,EAAG,EAAC,EAAEE,KAAK,CAAC;EACzD,CAAC,CAAC,OAAON,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IAEpB,OACE,IAAID,KAAK,CAAEC,KAAK,CAAyBE,OAAO,CAAC,IACjD,6BAA6B;EAEjC;AACF,CAAC;AAED,OAAO,MAAMQ,UAAU,GAAG,MAAON,EAAU,IAA4B;EACrE,IAAI;IACF,MAAMV,GAAG,CAACiB,MAAM,CAAmB,YAAWP,EAAG,EAAC,CAAC;EACrD,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IAEpB,OACE,IAAID,KAAK,CAAEC,KAAK,CAAyBE,OAAO,CAAC,IACjD,0BAA0B;EAE9B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}