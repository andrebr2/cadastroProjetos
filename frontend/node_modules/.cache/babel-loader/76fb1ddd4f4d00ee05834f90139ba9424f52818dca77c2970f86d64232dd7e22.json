{"ast":null,"code":"export const errorInterceptor = error => {\n  var _error$response;\n  if (error.message === 'NetWork Error') {\n    return Promise.reject(new Error('Erro de conexão.'));\n  }\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Do something\n  }\n  return Promise.reject(error);\n};","map":{"version":3,"names":["errorInterceptor","error","_error$response","message","Promise","reject","Error","response","status"],"sources":["/Users/andrebr/projetos/cadastroProjetos/frontend/src/services/api/axios-config/interceptors/ErrorInterceptor.ts"],"sourcesContent":["import { AxiosError } from \"axios\";\nimport { error } from \"console\";\n\nexport const errorInterceptor = (error: AxiosError) => {\n\n    if(error.message === 'NetWork Error') {\n        return Promise.reject(new Error('Erro de conexão.'));\n    }\n\n    if(error.response?.status === 401) {\n        // Do something\n    }\n\n    return Promise.reject(error);\n\n};"],"mappings":"AAGA,OAAO,MAAMA,gBAAgB,GAAIC,KAAiB,IAAK;EAAA,IAAAC,eAAA;EAEnD,IAAGD,KAAK,CAACE,OAAO,KAAK,eAAe,EAAE;IAClC,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,kBAAkB,CAAC,CAAC;EACxD;EAEA,IAAG,EAAAJ,eAAA,GAAAD,KAAK,CAACM,QAAQ,cAAAL,eAAA,uBAAdA,eAAA,CAAgBM,MAAM,MAAK,GAAG,EAAE;IAC/B;EAAA;EAGJ,OAAOJ,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAEhC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}