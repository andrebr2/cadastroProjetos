{"ast":null,"code":"import { Environment } from \"environment\";\nimport { Api } from \"../axios-config\";\nconst getAll = async (page = 1, filter = '') => {\n  try {\n    const urlRelative = `/project?_page=${page}&_limit=${Environment.LIMITE_DE_LINHAS}&name_like=${filter}`;\n    const {\n      data,\n      headers\n    } = await Api.get(urlRelative);\n    if (data) {\n      return {\n        data,\n        totalCount: Number(headers['x-total-count']) || Environment.LIMITE_DE_LINHAS\n      };\n    }\n    return new Error('Erro ao listar registros.');\n  } catch (error) {\n    console.error(error);\n    return new Error(error.message) || 'Erro ao listar registros.';\n  }\n};\nconst getById = async id => {\n  try {\n    const {\n      data\n    } = await Api.get(`/project/${id}`);\n    if (data) {\n      return data;\n    }\n    return new Error('Erro ao consultar registro.');\n  } catch (error) {\n    console.error(error);\n    return new Error(error.message) || 'Erro ao consultar registro.';\n  }\n};\nconst create = async dados => {\n  try {\n    const {\n      data\n    } = await Api.post('/project/', dados);\n    if (data) {\n      return data.id;\n    }\n    return new Error('Erro ao criar registro.');\n  } catch (error) {\n    console.error(error);\n    return new Error(error.message) || 'Erro ao criar registro.';\n  }\n};\nconst updateById = async (id, dados) => {\n  try {\n    await Api.put(`/project/${id}`, dados);\n  } catch (error) {\n    console.error(error);\n    return new Error(error.message) || 'Erro ao atualizar registro.';\n  }\n};\nconst deleteById = async id => {\n  try {\n    await Api.delete(`/project/${id}`);\n  } catch (error) {\n    console.error(error);\n    return new Error(error.message) || 'Erro ao apagar registro.';\n  }\n};\nexport const ProjetosService = {\n  getAll,\n  getById,\n  create,\n  updateById,\n  deleteById\n};","map":{"version":3,"names":["Environment","Api","getAll","page","filter","urlRelative","LIMITE_DE_LINHAS","data","headers","get","totalCount","Number","Error","error","console","message","getById","id","create","dados","post","updateById","put","deleteById","delete","ProjetosService"],"sources":["/Users/andrebr/projetos/cadastroProjetos/frontend/src/services/api/Projetos/ProjetosService.ts"],"sourcesContent":["import { Environment } from \"environment\";\nimport { Api } from \"../axios-config\";\n\n\ninterface IListagemProjeto {\n\n    id: number;\n    name: string;\n    goal: string;\n    startDate: Date;\n    finalDate: Date;\n    price: number;\n\n}\n\ninterface IDetalheProjeto {\n\n    id: number;\n    name: string;\n    goal: string;\n    startDate: Date;\n    finalDate: Date;\n    price: number;\n\n}\n\ntype TProjetosComTotalCount = {\n\n    data: IListagemProjeto[];\n    totalCount: number;\n\n}\n\nconst getAll = async (page = 1, filter = ''): Promise<TProjetosComTotalCount | Error> => {\n\n    try {\n\n        const urlRelative = `/project?_page=${page}&_limit=${Environment.LIMITE_DE_LINHAS}&name_like=${filter}`\n\n        const { data, headers } = await Api.get(urlRelative);\n\n        if (data) {\n            return {\n                data,\n                totalCount: Number(headers['x-total-count']) || Environment.LIMITE_DE_LINHAS,\n            };\n        }\n\n        return new Error('Erro ao listar registros.');\n\n    } catch (error) {\n        console.error(error);\n        return new Error((error as { message: string }).message) || ('Erro ao listar registros.');\n    }\n\n};\n\nconst getById = async (id: number): Promise<IDetalheProjeto | Error> => {\n\n    try {\n\n        const { data } = await Api.get(`/project/${id}`);\n\n        if (data) {\n\n            return data;\n\n        }\n\n        return new Error('Erro ao consultar registro.');\n\n    } catch (error) {\n\n        console.error(error);\n\n        return new Error((error as { message: string }).message) || ('Erro ao consultar registro.');\n\n    }\n\n};\n\nconst create = async (dados: Omit<IDetalheProjeto, 'id'>): Promise<number | Error> => {\n\n    try {\n\n        const { data } = await Api.post<IDetalheProjeto>('/project/', dados);\n\n        if (data) {\n\n            return data.id;\n\n        }\n\n        return new Error('Erro ao criar registro.');\n\n    } catch (error) {\n\n        console.error(error);\n\n        return new Error((error as { message: string }).message) || ('Erro ao criar registro.');\n\n    }\n\n};\n\nconst updateById = async (id: number, dados: IDetalheProjeto): Promise<void | Error> => {\n\n    try {\n\n        await Api.put<IDetalheProjeto>(`/project/${id}`, dados);\n\n    } catch (error) {\n\n        console.error(error);\n\n        return new Error((error as { message: string }).message) || ('Erro ao atualizar registro.');\n\n    }\n\n};\nconst deleteById = async (id: number): Promise<void | Error> => { \n\n    try {\n\n        await Api.delete<IDetalheProjeto>(`/project/${id}`);\n\n\n    } catch (error) {\n\n        console.error(error);\n\n        return new Error((error as { message: string }).message) || ('Erro ao apagar registro.');\n\n    }\n\n};\n\nexport const ProjetosService = {\n\n    getAll,\n    getById,\n    create,\n    updateById,\n    deleteById,\n\n};"],"mappings":"AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,GAAG,QAAQ,iBAAiB;AAgCrC,MAAMC,MAAM,GAAG,MAAAA,CAAOC,IAAI,GAAG,CAAC,EAAEC,MAAM,GAAG,EAAE,KAA8C;EAErF,IAAI;IAEA,MAAMC,WAAW,GAAI,kBAAiBF,IAAK,WAAUH,WAAW,CAACM,gBAAiB,cAAaF,MAAO,EAAC;IAEvG,MAAM;MAAEG,IAAI;MAAEC;IAAQ,CAAC,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAACJ,WAAW,CAAC;IAEpD,IAAIE,IAAI,EAAE;MACN,OAAO;QACHA,IAAI;QACJG,UAAU,EAAEC,MAAM,CAACH,OAAO,CAAC,eAAe,CAAC,CAAC,IAAIR,WAAW,CAACM;MAChE,CAAC;IACL;IAEA,OAAO,IAAIM,KAAK,CAAC,2BAA2B,CAAC;EAEjD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,OAAO,IAAID,KAAK,CAAEC,KAAK,CAAyBE,OAAO,CAAC,IAAK,2BAA4B;EAC7F;AAEJ,CAAC;AAED,MAAMC,OAAO,GAAG,MAAOC,EAAU,IAAuC;EAEpE,IAAI;IAEA,MAAM;MAAEV;IAAK,CAAC,GAAG,MAAMN,GAAG,CAACQ,GAAG,CAAE,YAAWQ,EAAG,EAAC,CAAC;IAEhD,IAAIV,IAAI,EAAE;MAEN,OAAOA,IAAI;IAEf;IAEA,OAAO,IAAIK,KAAK,CAAC,6BAA6B,CAAC;EAEnD,CAAC,CAAC,OAAOC,KAAK,EAAE;IAEZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IAEpB,OAAO,IAAID,KAAK,CAAEC,KAAK,CAAyBE,OAAO,CAAC,IAAK,6BAA8B;EAE/F;AAEJ,CAAC;AAED,MAAMG,MAAM,GAAG,MAAOC,KAAkC,IAA8B;EAElF,IAAI;IAEA,MAAM;MAAEZ;IAAK,CAAC,GAAG,MAAMN,GAAG,CAACmB,IAAI,CAAkB,WAAW,EAAED,KAAK,CAAC;IAEpE,IAAIZ,IAAI,EAAE;MAEN,OAAOA,IAAI,CAACU,EAAE;IAElB;IAEA,OAAO,IAAIL,KAAK,CAAC,yBAAyB,CAAC;EAE/C,CAAC,CAAC,OAAOC,KAAK,EAAE;IAEZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IAEpB,OAAO,IAAID,KAAK,CAAEC,KAAK,CAAyBE,OAAO,CAAC,IAAK,yBAA0B;EAE3F;AAEJ,CAAC;AAED,MAAMM,UAAU,GAAG,MAAAA,CAAOJ,EAAU,EAAEE,KAAsB,KAA4B;EAEpF,IAAI;IAEA,MAAMlB,GAAG,CAACqB,GAAG,CAAmB,YAAWL,EAAG,EAAC,EAAEE,KAAK,CAAC;EAE3D,CAAC,CAAC,OAAON,KAAK,EAAE;IAEZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IAEpB,OAAO,IAAID,KAAK,CAAEC,KAAK,CAAyBE,OAAO,CAAC,IAAK,6BAA8B;EAE/F;AAEJ,CAAC;AACD,MAAMQ,UAAU,GAAG,MAAON,EAAU,IAA4B;EAE5D,IAAI;IAEA,MAAMhB,GAAG,CAACuB,MAAM,CAAmB,YAAWP,EAAG,EAAC,CAAC;EAGvD,CAAC,CAAC,OAAOJ,KAAK,EAAE;IAEZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IAEpB,OAAO,IAAID,KAAK,CAAEC,KAAK,CAAyBE,OAAO,CAAC,IAAK,0BAA2B;EAE5F;AAEJ,CAAC;AAED,OAAO,MAAMU,eAAe,GAAG;EAE3BvB,MAAM;EACNc,OAAO;EACPE,MAAM;EACNG,UAAU;EACVE;AAEJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}